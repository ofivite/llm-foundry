data_local: ???
data_remote:  # If blank, files must be present in data_local
max_seq_len: 1024
global_seed: ???

# Experiment/Run Name
experiment_name: ???
run_name: ???

# Model
model:
  name: mpt_causal_lm
  init_device: meta
  d_model: ??? # 1024
  n_heads: ??? # 16
  n_layers: ??? # 24
  expansion_ratio: 4
  max_seq_len: ${max_seq_len}
  learned_pos_emb: false
  vocab_size: 50257
  resid_pdrop: 0.0
  emb_pdrop: 0.0
  tie_word_embeddings: true
  no_bias: false
  norm_type: low_precision_layernorm # can manually remove learnable params, see norm.py
  logit_scale: ${eval:'1 / ${model._mup_config.d_model_ratio}'}
  ffn_config:
    ffn_type: mptmlp
    ffn_act_fn: 
      name: gelu
      approximate: 'none'
  attn_config:
    attn_impl: flash
    attn_pdrop: 0.0
    softmax_scale: ${eval:'(${model._mup_config.d_heads_base})**0.5 / ${model._mup_config.d_heads}'}
    qk_ln: false
    qk_gn: false
    clip_qkv: null
    attn_uses_sequence_id: false
    sliding_window_size: -1
    alibi: false
    rope: true
    rope_theta: 10000
    rope_impl: dail
    rope_dail_config:
      type: original
      pos_idx_in_fp32: true
      xpos_scale_base: 512
  init_config:
    name: baseline_
    _init_std: ??? # HP value to be tuned
    init_std: ${eval:'${._init_std} / ${model.d_model}**0.5'} # NB: we can do muP scaling like this only in tied case, when Linear layers = matrix-like params
    init_div_is_residual: True # True: math.sqrt(2 * cfg.n_layers)
    emb_init_std: ${eval:'${._init_std} / ${model._mup_config.d_model_base}**0.5'}
    emb_init_uniform_lim: None
  _mup_config: 
    d_model_base: ???
    n_heads_base: ???
    d_heads_base: ${eval:'${.d_model_base} / ${.n_heads_base}'}
    d_heads: ${eval:'${model.d_model} / ${model.n_heads}'}
    d_model_ratio: ${eval:'${model.d_model} / ${.d_model_base}'} 
    matrix_like_params:
      - param_str_match: attn.Wqkv.weight
        lr: ${eval:'${optimizer.lr} / ${model._mup_config.d_model_ratio}'}
      - param_str_match: attn.out_proj.weight
        lr: ${eval:'${optimizer.lr} / ${model._mup_config.d_model_ratio}'}
      - param_str_match: ffn.up_proj.weight
        lr: ${eval:'${optimizer.lr} / ${model._mup_config.d_model_ratio}'}
      - param_str_match: ffn.down_proj.weight
        lr: ${eval:'${optimizer.lr} / ${model._mup_config.d_model_ratio}'}

# Tokenizer
tokenizer:
  name: gpt2
  kwargs:
    model_max_length: ${max_seq_len}

# Dataloaders
train_loader:
  name: text
  dataset:
    local: ${data_local}
    remote: ${data_remote}
    split: ???
    shuffle: true
    max_seq_len: ${max_seq_len}
    shuffle_seed: ${global_seed}
  drop_last: true
  num_workers: ???

eval_loader:
  name: text
  dataset:
    local: ${data_local}
    remote: ${data_remote}
    split: ???
    shuffle: false
    max_seq_len: ${max_seq_len}
    shuffle_seed: ${global_seed}
  drop_last: false
  num_workers: ???

# Optimization
scheduler:
  name: ???
  t_warmup: ???
  # alpha_f: ???

optimizer:
  name: decoupled_adamw
  lr: ???
  betas:
  - 0.9
  - 0.95
  eps: 1.0e-08
  weight_decay: 0.0
  param_groups: ${model._mup_config.matrix_like_params}

algorithms:
  gradient_clipping:
    clipping_type: norm
    clipping_threshold: 1.0

max_duration: ???  # ~ 7B tokens
eval_interval: ???
eval_first: false
eval_subset_num_batches: -1
global_train_batch_size: ???

# System
seed: ${global_seed}
device_eval_batch_size: ???
device_train_microbatch_size: ???
# device_train_microbatch_size: auto
precision: ???

# # torch compile
# compile_config: {}

# FSDP
fsdp_config:
  sharding_strategy: FULL_SHARD
  mixed_precision: PURE
  activation_checkpointing: false
  activation_checkpointing_reentrant: false
  activation_cpu_offload: false
  limit_all_gathers: true

# Logging
progress_bar: false
log_to_console: true
console_log_interval: 1ba

callbacks:
  lr_monitor: {}
  # mup_monitor:
  #   batch_log_interval: 1
  # activation_monitor:
  #   interval: 1ba
  #   only_log_wandb: false

loggers:
  mlflow:
    experiment_name: ${experiment_name}
    run_name: ${run_name}
    ignore_hyperparameters: ['load_path'] # 'load_path', 'loggers', 'max_duration', 'n_gpus', 'num_nodes', 'device_train_grad_accum', 'device_train_batch_size'
  wandb:
    entity: ???
    project: ???
    name: ${run_name}
    tags:
    - ${experiment_name}

# Checkpoint to local filesystem or remote object store
save_interval: ???
save_overwrite: ???
save_num_checkpoints_to_keep: ???
save_folder: ???
save_weights_only: false

# Load from local filesystem or remote object store
load_path: ???